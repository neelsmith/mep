import org.apache.tools.ant.filters.ReplaceTokens
import edu.holycross.shot.mdweb.SiteBuilder
import org.pegdown.PegDownProcessor

buildscript {
    repositories {
        mavenCentral()
	// for mdweb library
        maven {
            url "http://beta.hpcc.uh.edu/nexus/content/repositories/releases"
        }
	// for pegdown library
        maven {
            url "https://repository.jboss.org/nexus/content/repositories/scala-tools-releases"
        }
    }
    dependencies {
        classpath  group: 'edu.holycross.shot', name : 'mdweb' , version: "0.3.1"
        classpath group: 'org.pegdown', name : 'pegdown', version: "1.0.1"
    }
}


apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'groovy'
apply plugin: 'maven'

apply from: "versions.gradle"
apply from: "pub.gradle"
apply from: "links.gradle"

apply from: "conf.gradle"


repositories {
    mavenCentral()
    // for http builder:
    maven {
        url "http://repository.codehaus.org"
    }
    // for cite libs:
    maven {
        url "http://beta.hpcc.uh.edu/nexus/content/repositories/releases"
    }
}

configurations {
    ck {
        description = "CITEKit configuration"
        transitive = true
    }
}

dependencies {
    compile group: 'commons-io', name: 'commons-io', version: commonsioVersion
    compile group: 'log4j', name: 'log4j', version: log4jVersion, ext: 'jar'
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: groovyVersion
//    groovy  group: 'org.codehaus.groovy', name: 'groovy-all', version: groovyVersion
compile  group: 'org.codehaus.groovy', name: 'groovy-all', version: groovyVersion
//    groovy group: 'org.codehaus.groovy.modules.http-builder', name: 'http-builder', version: '0.5.2'
compile group: 'org.codehaus.groovy.modules.http-builder', name: 'http-builder', version: '0.5.2'
//    groovy group: 'edu.harvard.chs', name : 'cite' , version: citeVersion
compile group: 'edu.harvard.chs', name : 'cite' , version: citeVersion

    runtime group: 'edu.harvard.chs', name : 'cite' , version: citeVersion

    testCompile group: 'junit', name: 'junit', version: junitVersion

    ck group : "org.homermultitext", name : "citekit", version : ckVersion
}


httpPort = 8080
stopPort = 9451
stopKey = 'foo'


group = "edu.holycross.shot"
version = "0.1.0"




task setupCK (type: Copy ) {
    from  zipTree(configurations.ck.files.asList()[0])
    into "${buildDir}/tmp/jettyRunWar/webapp/citekit"
}

task article(dependsOn: setupCK) {
    description =  "Use mdweb library to build web site"
    doLast {
        File src = new File("builtUpon")
        if (!buildDir.exists()) {
            buildDir.mkdir()
        }
        File out = new File("${buildDir.path}/tmp/jettyRunWar/webapp/builtUpon")
        SiteBuilder sb = new SiteBuilder(src,out)
        sb.buildSite()
    }
}



uploadArchives {
  repositories.mavenDeployer {
        repository(url: nexusRepo) {                   
            authentication (userName: nexusUser, password: nexusPassword)
        }
    }
}


war {
//    filter(ReplaceTokens, tokens: [homeUrl: homeUrl, sparqls: sparqls, iipsrv : iipsrv, demoImage : demoImage, demoObject : demoObject, demoText : demoText, detailWidth: detailWidth, 
//htmlheader : htmlheader, htmlfooter : htmlfooter, htmlnav : htmlnav, projectlabel : projectlabel, queryforms: queryforms, mooxslt: mooxslt])

    filter(ReplaceTokens, tokens: [tripleserver : tripleserver, citekit : citekit, images : images, texts : texts, collections : collections, indices : indices, ict : ict, imgw : imgw])

    from ("${buildDir}/tmp/jettyRunWar/webapp/citekit") {
        into("citekit")
    }
    classpath sourceSets.main.output.classesDir
    classpath configurations.runtime
}


jettyRunWar.dependsOn([article])

war.dependsOn([article])


